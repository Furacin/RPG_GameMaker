<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>Prota_Abajo_SPR</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Inicializacion
image_speed = 0;

// Enumerador en el que a cada valor le asignamos un script
enum estados_jugador {
    parado = Prota_Parado,
    caminando = Prota_Caminando
}

dir = "abajo" // Variable de direccion que tiene por defecto "abajo"
estado = estados_jugador.parado // estado por defecto del prota

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Inicializar el movimiento
vv = 0; // velocidad vertical
vh = 0; // velocidad horizontal
v = 2; // 2 pixeles por fotograma
depth = -y;
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Capturar movimiento por teclado
vh = (-keyboard_check(vk_left) + keyboard_check(vk_right)) * v; // Uno de los dos sumandos devuelve true si se esta apretando la tecla de direccion izquierda o la derecha. De suman para evitar errores a la hora de apretar las dos teclas a la vez.
vv =  (-keyboard_check(vk_up) + keyboard_check(vk_down)) * v;
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Gestion de estado de movimiento

// Determinamos direccion
if (vv &gt; 0) dir = "abajo"; // nos estamos moviendo hacia abajo
else 
    if (vv &lt; 0) dir ="arriba"; // nos estamos moviendo hacia arriba
    else
        if (vh &gt; 0) dir = "derecha"; // nos estamos moviendo hacia la derecha
        else
            if (vh &lt;0) dir = "izquierda"; // nos estamos moviendo hacia la izquierda
            
// Si tenemos una direccion establecemos el estado caminar
if (dir != "") estado = estados_jugador.caminando;
// Si no nos movemos establecemos el estado parado
if (vh == 0 and vv == 0) estado = estados_jugador.parado;

</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Establecer movimiento final y estado
x += vh; // Sumar a la x la velocidad
y += vv; // Sumar a la y la velocidad

// Ejecutamos uno de los scripts de movimiento dependiendo de la variable estado
script_execute(estado); 
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
